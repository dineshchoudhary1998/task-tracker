{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","props","task","reminder","onDoubleClick","onToggle","id","cursor","onDelete","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","itemid","filter","toggleReminder","taskToToggle","updTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b681e7d8.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({color,text, onClick}) => {\r\n    return (\r\n        \r\n            <button  \r\n             onClick={onClick}\r\n             style={{ backgroundColor :color}}\r\n             className='btn'> \r\n             {text}\r\n             </button>\r\n        \r\n    )\r\n}\r\n\r\n//Default props\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\n//Proptypes\r\n\r\nButton.propTypes ={\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n\r\n}\r\nexport default Button\r\n","import React from 'react'\r\nimport Button from './Button'\r\n//import PropTypes from 'prop-types'\r\n\r\n\r\n\r\nconst Header = ({ title, onAdd ,showAdd}) => {\r\n    const onClick = ()=>{\r\n        console.log(\"click\");\r\n    }\r\n    return (\r\n       <header className='header'>\r\n           <h1> {title} </h1>\r\n        <Button color={showAdd ? 'red': 'green'} text={ showAdd ? 'Close': 'Add'} onClick={onAdd}></Button>\r\n       </header> \r\n    )\r\n}\r\n \r\n/*Default props \r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}*/\r\nexport default Header\r\n","import React from 'react'//Not needed any where \r\nimport { FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ( props ) => {\r\n    return (\r\n        <div className={` task ${props.task.reminder ? 'reminder' : ''}`} onDoubleClick={() => props.onToggle(props.task.id)}>\r\n            <h3>\r\n            { props.task.text} <FaTimes style=\r\n            {{ color: 'red', cursor: 'pointer' }}\r\n            onClick={() => props.onDelete(props.task.id) }/>\r\n            </h3>\r\n            <p>{props.task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n    ","import React from 'react'\r\nimport Task from './Task'\r\n\r\n\r\nconst Tasks = ( props ) => {\r\n    \r\n    return (\r\n        <>\r\n            {props.tasks.map((task) => (\r\n            \r\n                <Task \r\n                key={task.id} \r\n                task={task}\r\n                onDelete = {props.onDelete}\r\n                onToggle ={props.onToggle}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from \"react\"\r\n\r\nconst AddTask = ( props ) => {\r\n    const [text, setText] =useState('')\r\n    const [day, setDay] =useState('')\r\n    const [reminder, setReminder] =useState('')\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('Please Add a task');\r\n            return\r\n        }\r\n        props.onAdd({ text,day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className = 'add-form' onSubmit={onSubmit}>\r\n            <div className= 'form-control'>\r\n                <label>\r\n                    Task\r\n                </label>\r\n                <input type='text' placeholder='Add Task'\r\n               value={text} onChange ={(e) => setText(e.target.value)}></input>\r\n            </div>\r\n            <div className= 'form-control'>\r\n                <label>\r\n                    Day and Time\r\n                </label>\r\n                <input type='text' placeholder='Add Daya and Time'\r\n              value={day} onChange ={(e) => setDay(e.target.value)}></input>\r\n            </div>\r\n            <div className= 'form-control form-control-check'>\r\n                <label>\r\n                    Set Reminder\r\n                </label>\r\n                <input \r\n                type='checkbox'  \r\n                checked={reminder}\r\n                value={reminder}\r\n                onChange ={(e) => setReminder(e.currentTarget.checked)}></input>\r\n            </div>\r\n            <input type='submit' value='Save Task' className='btn btn-block'></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport { useState , useEffect} from \"react\";\nimport AddTask from \"./components/AddTask\";\n\n\nfunction App() {\n   //State and useState hooks\n    //State is immutable.\n    //This is global state and can be accessed from any component.\n\n    const [showAddTask, setShowAddTask] =useState(false)\n\n    const [tasks, setTasks] = useState([  ]) \n\n\n    useEffect(()=>{\n      const getTasks =async () => {\n        const tasksFromServer = await fetchTasks ()\n        setTasks(tasksFromServer)\n      }\n\n      getTasks()\n\n    }, [])//user dependncy array\n\n//Fetch Tasks from db.json\n    const fetchTasks = async()=>{\n      const res = await fetch('http://localhost:5000/tasks')\n      const data = await res.json()\n      \n      return data\n    }\n    //Fetch Tasks from db.json\n    const fetchTask = async(id )=>{\n      const res = await fetch(`http://localhost:5000/tasks/${id}`)\n      const data = await res.json()\n      \n      return data\n    }\n//Add Task\n\n  const addTask = async (task)=>{\n    const res = await fetch('http://localhost:5000/tasks',{\n      method: 'POST',\n      headers:{\n        'Content-type':'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n    const data =await res.json()\n    setTasks([...tasks, data])\n    /*const id =Math.floor(Math.random()* 10000 )+1\n    const newTask = {id, ...task }\n    setTasks([...tasks, newTask])*/\n   \n  }\n\n//Delete Task using a funcotion\n    const deleteTask = async (itemid )=>{\n      await fetch(`http://localhost:5000/tasks/${itemid}`,{\n        method:'DELETE',\n      }) //dELETE FROM BACKEND\n      setTasks(tasks.filter((task) => task.id !== itemid))\n    }\n//Toggle Reminder\n\n    const toggleReminder = async(id) =>{\n      const taskToToggle = await fetchTask(id)\n      const updTask ={ ...taskToToggle, \n      reminder: !taskToToggle.reminder}\n\n      const res =await fetch (`http://localhost:5000/tasks/${id}`,{\n        method: 'PUT',\n        headers:{\n          'Content-type':'application/json'\n        },\n        body: JSON.stringify(updTask)\n      }) \n\n      const data =await res.json()\n\n\n      setTasks(\n        tasks.map((task) => task.id === id ? {\n        ...task , reminder: data.reminder\n      } : task))\n\n    }\n\n  return (\n    <div className='container'>\n      <Header \n      onAdd={ () => setShowAddTask(!showAddTask)} \n      title=\"Task Tracker\"\n      showAdd ={showAddTask}/>\n\n    { showAddTask && <AddTask onAdd ={addTask}/>}\n     \n      <Tasks \n      tasks={tasks} \n      onDelete={deleteTask}\n      onToggle={toggleReminder}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}